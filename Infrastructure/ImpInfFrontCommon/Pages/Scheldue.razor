@page "/"
@page "/Scheldue"

@using BlazorDateRangePicker

<PageTitle>Index</PageTitle>

<div class="d-flex flex-column position-relative h-100">
    <div class="d-sm-flex flex-sm-row justify-content-between align-items-center m-3">
        <div class="position-absolute top-0 start-50 translate-middle-x w-100 alert alert-danger alert-dismissible" style="transition: opacity 250ms; opacity: @(ShowErrorMessage ? "1" : "0")">
            <strong>Вот это да!</strong> Ну скоро поправим, а пока терпите.
            <button type="button" class="btn-close" @onclick="() => ShowErrorMessage = false"></button>
        </div>

        <div class="header">Расписание</div>

        <div class="d-flex flex-column align-items-start">
            <div class="text-black-50">Выберите неделю</div>
            <DateRangePicker
                @bind-StartDate="StartDate"
                ShowWeekNumbers="true"
                SingleDatePicker="true"
                ShowOnlyOneCalendar="true"
                />
        </div>
    </div>

    <div class="overflow-hidden align-items-center">
        @foreach (var day in Days)
        {
            <div id="@($"day{day.Date.DayOfWeek}")" class="col-sm p-3 h-100">
                <DayCard Day="day"/>
            </div>
        }
    </div>
</div>

@code{

    [Inject]
    private IJSRuntime jSRuntime { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            await jSRuntime.InvokeVoidAsync("scrollToElementId", $"day{StartDate.Value.Date.DayOfWeek}");
        }
        catch {/*ignore*/}

        base.OnAfterRender(firstRender);
    }
}