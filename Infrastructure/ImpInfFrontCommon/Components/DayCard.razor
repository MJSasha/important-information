@using ImpInfCommon.Data.Definitions

<div class="frame h-100" style="background-color: var(--accent-color)">
    <div class="d-flex">@($"{Day.Date.DayOfWeek.ToRusDay()}, {Day.Date:dd.MM.yyyy}")</div>
    <div class="d-lg-flex p-2">
        <div class="d-flex flex-column justify-content-center col-lg-5 col-xl">
            @if (Day.LessonsAndTimes.Any())
            {
                <div class="second-header mb-2">Расписание</div>
                <div class="ps-2">
                    @foreach (var item in Day.LessonsAndTimes)
                    {
                        <div class="d-flex flex-row align-items-center">
                            <div class="me-2" style="border-radius: 50%; background-color: @GetImporatanceColor(item.Importance); height: 10px; width: 10px" />
                            <div>@($"\t{item.Time:HH:mm} - {item.Lesson.Name} ({item.Type.GetName()})\n")</div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="second-header">Выходной</div>
            }
        </div>
        @if (!string.IsNullOrWhiteSpace(Day.Information))
        {
            <div class="d-flex col-lg-1">
                <div class="d-flex separator-vertical mx-3 d-none d-lg-block d-sm-none"></div>
                <div class="d-flex separator-horizontal my-3 d-lg-none d-sm-block"></div>
            </div>
            <div class="flex-column col-lg-5">
                <div class="second-header mb-2">Информация</div>
                <div class="text-break">@($"{Day.Information}\n")</div>
            </div>
        }
    </div>
</div>

@code {

    [Parameter]
    public Day Day { get; set; }

    private string GetImporatanceColor(Importance importance)
    {
        return importance switch
        {
            Importance.Big => "Red",
            Importance.Middle => "Yellow",
            Importance.Little => "Green",
            _ => "Gray"
        };
    }
}
